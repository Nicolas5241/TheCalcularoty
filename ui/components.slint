import { LineEdit, ComboBox } from "std-widgets.slint";
export component UserInput inherits HorizontalLayout {
	in property <bool> stroked: false;
	in property <length> stroke-width: 3px;
	in property <brush> stroke-color: black;
	in property <string> label: "label";
	in property <length> font-size: 20px;
	
	spacing: 20px;

	public function get_input() -> string {
	    input.text
	}

	if stroked: Text {
		text: label;
		stroke: stroke-color;
		stroke-width: stroke-width;
		font-size: font-size;
	}
	if !stroked: Text {
		text: label;
		font-size: font-size;
	}
	input := LineEdit {}
}

export component ComboInput inherits HorizontalLayout {
	in property <[string]> combobox-model: [""];
	in property <InputType> input-type: text;
	in property <bool> read-only: false;
	in property <length> input-height: 30px;
	in property <length> max-combo-width: 80px;

	in-out property <string> combo-value;
	
	in-out property <string> input-text;

	callback combo_changed(string);

	changed combo-value => { combo_changed(combo-value) }

	spacing: 20px;

	combo := ComboBox {
		model: combobox-model;
		current-value <=> combo-value;
		height: input-height;
		width: 80px;
		vertical-stretch: 0;
	}

	input := LineEdit {
		input-type: input-type;
		read-only: read-only;
		text <=> input-text;
		height: input-height;
	}
}
